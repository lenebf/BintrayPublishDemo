apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'com.android.library'

ext {
    libGroupId = 'com.lenebf.demo'
    libArtifactId = 'blibrary'
    libVersion = '0.0.1'
    ghUrl = 'https://github.com/lenebf/BintrayPublishDemo'
}
def pomConfig = {
    licenses {
        license {
            name "GNU General Public License v3.0"
            url "https://www.gnu.org/licenses/gpl-3.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "lenebf"
            name "lenebf"
            email "lenebf@126.com"
        }
    }
    scm {
        url ghUrl
    }
}

task sourcesJar(type: Jar) {
    def classifier = getArchiveClassifier()
    classifier.set('source')
    classifier.convention('source')
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    def classifier = getArchiveClassifier()
    classifier.set('javadoc')
    classifier.convention('javadoc')
    from javadoc.destinationDir
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact("$buildDir/outputs/aar/blibrary-release.aar")
            artifact sourcesJar
            artifact javadocJar
            groupId libGroupId
            artifactId libArtifactId
            version libVersion
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

                def root = asNode()
                root.appendNode('description', 'Bintray publish test.')
                root.appendNode('name', 'blibrary')
                root.appendNode('url', ghUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

// Bintray keys
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.key")
    publications = ['MyPublication']
    pkg {
        repo = 'maven'
        name = 'blib'
        licenses = ['GPL-3.0']
        vcsUrl = ghUrl
        version {
            name = libVersion
            desc = 'Publish test version.'
            released = new Date()
        }
    }
}